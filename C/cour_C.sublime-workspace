{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"nb",
				"nbCartes"
			],
			[
				"lon",
				"longueur"
			],
			[
				"ini",
				"initListe"
			],
			[
				"da",
				"dataLenght"
			],
			[
				"li",
				"liste.h"
			],
			[
				"gen",
				"genereScore"
			],
			[
				"jeu",
				"jeu.h"
			],
			[
				"pl",
				"PLACE_UNDER"
			],
			[
				"pla",
				"PLACE_RIGHT"
			],
			[
				"form_",
				"form_game"
			],
			[
				"PLA",
				"PLACE_UNDER"
			],
			[
				"for",
				"form_infobox"
			],
			[
				"fo",
				"form_game"
			],
			[
				"pos",
				"pos2"
			],
			[
				"N",
				"NULL"
			],
			[
				"Pl",
				"PLACE_RIGHT"
			],
			[
				"P",
				"PLACE_UNDER"
			],
			[
				"inf",
				"infoBoxLabel"
			],
			[
				"fen",
				"fenetreDeFin"
			],
			[
				"Mak",
				"MakeButton"
			],
			[
				"hide",
				"hide_next_move"
			],
			[
				"b",
				"bufferchar"
			],
			[
				"buff",
				"bufferint"
			],
			[
				"jou",
				"joueurs"
			],
			[
				"diff_4",
				"diff_4x4"
			],
			[
				"place",
				"PLACE_UNDER"
			],
			[
				"gri",
				"grilleWidth"
			],
			[
				"De",
				"DEFUALT_GRILLEHEIGHT"
			],
			[
				"DU",
				"DEFUALT_GRILLEWIDTH"
			],
			[
				"spr",
				"sprintf"
			],
			[
				"form",
				"form_end_game"
			],
			[
				"cou",
				"couleurCard"
			],
			[
				"bout",
				"boutonEnregistrer"
			],
			[
				"bou",
				"boutonRejouer"
			],
			[
				"Ma",
				"MakeLabel"
			],
			[
				"card",
				"cardColor"
			],
			[
				"coul",
				"couleurCard"
			],
			[
				"size",
				"sizeof"
			],
			[
				"coule",
				"couleur.h"
			],
			[
				"gr",
				"grilleWidth"
			],
			[
				"sce",
				"screen"
			],
			[
				"cl",
				"CloseWindow"
			],
			[
				"ret",
				"return_button"
			],
			[
				"No",
				"NO_CARE"
			],
			[
				"quit",
				"quit_button"
			],
			[
				"Set",
				"SetWidgetPos"
			],
			[
				"score",
				"score.h"
			],
			[
				"displa",
				"display.h"
			],
			[
				"str",
				"strJoueurs"
			],
			[
				"G",
				"GRILLEWIDTH"
			],
			[
				"affic",
				"affichage.h"
			],
			[
				"me",
				"menu.h"
			],
			[
				"Pla",
				"Player"
			],
			[
				"GRI",
				"GRILLEHEIGHT"
			],
			[
				"gril",
				"grilleHeight"
			],
			[
				"grille",
				"grilleWidth"
			],
			[
				"scre",
				"screen"
			],
			[
				"grill",
				"grilleWidth"
			],
			[
				"nom",
				"nomJoueur"
			],
			[
				"j",
				"joueur"
			],
			[
				"player",
				"player.h"
			],
			[
				"F",
				"Forme"
			],
			[
				"pr",
				"printf\tprintf …"
			],
			[
				"poin",
				"point"
			],
			[
				"po",
				"point"
			],
			[
				"forme",
				"forme.h"
			],
			[
				"image",
				"image.h"
			],
			[
				"Lis",
				"ListeVide"
			],
			[
				"pri",
				"printf"
			],
			[
				"com",
				"compile"
			],
			[
				"shu",
				"shuffle.h"
			],
			[
				"sh",
				"shuffle.h"
			],
			[
				"inc",
				"inc\t#include \"…\""
			],
			[
				"car",
				"cardPointer"
			],
			[
				"Fi",
				"FILE_NAME"
			],
			[
				"jte",
				"jtemp"
			],
			[
				"butt",
				"buttondollars"
			],
			[
				"bun",
				"buttonquit"
			],
			[
				"PL",
				"PLACE_UNDER"
			],
			[
				"bu",
				"buttonquit"
			],
			[
				"cal",
				"callbacks.h"
			],
			[
				"sc",
				"score"
			],
			[
				"lin",
				"linebuf"
			],
			[
				"l",
				"line"
			],
			[
				"FI",
				"FILE_NAME"
			],
			[
				"file",
				"file.h"
			],
			[
				"de",
				"def\t#ifndef … #define … #endif"
			],
			[
				"print",
				"printElement"
			],
			[
				"mat",
				"matvide"
			],
			[
				"si",
				"size_y"
			],
			[
				"a",
				"a"
			],
			[
				"tr",
				"true_psw"
			],
			[
				"new",
				"newline"
			],
			[
				"ne",
				"newpsw"
			],
			[
				"M",
				"PSW_MAX"
			],
			[
				"con",
				"config"
			],
			[
				"PS",
				"PSW_MAX"
			],
			[
				"len",
				"len_int"
			],
			[
				"fil",
				"file_origin"
			],
			[
				"le",
				"lena_o.png\tw:512 h:512"
			],
			[
				"c",
				"crypt/"
			],
			[
				"cha",
				"changeIMG"
			],
			[
				"change",
				"changePSW"
			],
			[
				"fp",
				"fpath_result"
			],
			[
				"f",
				"fpath_result"
			],
			[
				"fpa",
				"fpath"
			],
			[
				"DA",
				"DATE_MONTH"
			],
			[
				"D",
				"DATE_DAY"
			],
			[
				"wai",
				"waitTime"
			],
			[
				"clear",
				"clearscr"
			],
			[
				"strc",
				"struct\tstruct"
			],
			[
				"ps",
				"psw"
			],
			[
				"hi",
				"hide_show.h"
			],
			[
				"h",
				"hide_show.h"
			],
			[
				"fpath",
				"fpath_result"
			],
			[
				"ar",
				"argv"
			],
			[
				"mai",
				"main"
			],
			[
				"r",
				"printf"
			],
			[
				"pa",
				"pairsImpairs"
			],
			[
				"ma",
				"malloc"
			],
			[
				"i",
				"i"
			],
			[
				"rand",
				"random"
			],
			[
				"pile",
				"pile.h"
			],
			[
				"ex",
				"extract_operandes"
			],
			[
				"Pi",
				"PileVide"
			],
			[
				"aff",
				"afficherForme"
			],
			[
				"su",
				"supprimer"
			],
			[
				"lf",
				"lf2"
			]
		]
	},
	"buffers":
	[
		{
			"file": "projet/callbacks.c",
			"settings":
			{
				"buffer_size": 4773,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "projet/main.c",
			"settings":
			{
				"buffer_size": 907,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n\tImplementation des fonctions du module score.h\n*/\n\n#include \"score.h\"\n\n/*\n\tCree le fichier score si il n'existe pas deja.\n\tPermet de faire fonctionner le jeu si le fichier est supprime par erreur\n*/\nvoid createFile(){\n\tFILE *fscore;\n\tif((fscore=fopen(FILE_NAME,\"r\"))==NULL) {\n\t\tfscore=fopen(FILE_NAME,\"w\");\n\t}\n\tfclose(fscore);\n}\n\n/*\n\tajoute un score (nom+score) dans le fichier.\n\tle score est insere de facon a ce que le fichier soit trie dans l'ordre decroissant des scores\n\tCette procedure cree un fichier temporaire qui va etre renomme pour ecraser le fichier score\n\t@args: \n\t\t- Player (de la structure definie dans player.h) a ajouter au fichier\n*/\nvoid addScore(Player joueur){\n\tFILE *fscore;\n\tif((fscore=fopen(FILE_NAME,\"r+\"))==NULL) {\n\t\tperror(FILE_NAME); exit(errno);\n\t}\n\tFILE *ftemp;\n\tif((ftemp=fopen(\".file_temp\",\"w\"))==NULL) {\n\t\tperror(\".file_temp\"); exit(errno);\n\t}\n\t\n\tListe all_players;\n\tinitListe(&all_players);\n\n\tgetScore(&all_players);\n\trewind(fscore);\n\tinsertAndSort(&joueur,&all_players);\n\n\tfor(int j=1; j<=longueur(all_players); j++){\n\t\tPlayer *jp=malloc(sizeof(Player));\n\t\tjp=((Player*)ieme(all_players,j));\n\n\t//     fprintf(ftemp,\"%s:%d\\n\",jp->name,jp->score);\n\t\tfwrite(jp->name,sizeof(char)*MAX_NAME,1,ftemp);\n\t\tfwrite(&(jp->score),sizeof(int),1,ftemp);\n\t}\n\t// char test[20]=\"test\";\n\t// fwrite(test,sizeof(char)*20,1,ftemp);\n\t// fprintf(ftemp,\"%s:%d\",((Player*)ieme(all_players,longueur(all_players)))->name,((Player*)ieme(all_players,longueur(all_players)))->score);\n\tfclose(fscore);fclose(ftemp);\n\tremove(FILE_NAME);\n\trename(\".file_temp\",FILE_NAME);\n\t// rmListe(&all_players);\n}\n\nvoid insertAndSort(Player *joueur, Liste *listejoueurs){\n\tint i=1;\n\twhile(i<=longueur(*listejoueurs) && ((Player *)ieme(*listejoueurs,i))->score>=joueur->score)i++;\n\t//printf(\"%d\\n\",longueur(*listejoueurs));\n\tif(i==1 || compare(*joueur,*(Player *)ieme(*listejoueurs,i-1))) inserer(listejoueurs,i,joueur);\n\twhile(longueur(*listejoueurs)>10) supprimer(listejoueurs,longueur(*listejoueurs));\n}\n\nvoid getScore(Liste *joueurs){\n\tFILE *fscore;\n\tif((fscore=fopen(FILE_NAME,\"r+\"))==NULL) {\n\t\tperror(FILE_NAME); exit(errno);\n\t}\n\t\n\tchar *bufferchar=malloc(sizeof(char)*MAX_NAME);\n\tint bufferint;\n\twhile(fread(bufferchar,sizeof(char)*MAX_NAME,1,fscore)>0){\n\t\tfread(&bufferint,sizeof(int),1,fscore);\n\n\t\tPlayer *jtemp=malloc(sizeof(Player));\n\t\tinitPlayer(jtemp);\n\t\tstrcpy(jtemp->name,bufferchar);\n\t\tjtemp->score=bufferint;\n\t\tinserer(joueurs,longueur(*joueurs)+1,jtemp);\n\t\tfree(bufferchar);\n\n\t\tbufferint=0;\n\t\tbufferchar=NULL;\n\t\tbufferchar=malloc(sizeof(char)*MAX_NAME);\n\t}\n\tfclose(fscore);\n}\n\nint getLastScore(){\n\tFILE *fscore;\n\tif((fscore=fopen(FILE_NAME,\"r+\"))==NULL) {\n\t\tperror(FILE_NAME); exit(errno);\n\t}\n\tchar *bufferchar=malloc(sizeof(char)*MAX_NAME);\n\tint bufferint;\n\twhile(fread(bufferchar,sizeof(char)*MAX_NAME,1,fscore)>0) fread(&bufferint,sizeof(int),1,fscore);\n\tint sc=bufferint;\n\tfclose(fscore); free(bufferchar);\n\treturn sc;\n}\n\nint nbScores(){\n\tFILE *fscore;\n\tif((fscore=fopen(FILE_NAME,\"r+\"))==NULL) {\n\t\tperror(FILE_NAME); exit(errno);\n\t}\n\tint lines=0;\n\tchar *bufferchar=malloc(sizeof(char)*MAX_NAME);\n\tint bufferint;\n\twhile(fread(bufferchar,sizeof(char)*MAX_NAME,1,fscore)>0){\n\t\tfread(&bufferint,sizeof(int),1,fscore);\n\t\tlines++;\n\t}\n\t// printf(\"%d\\n\",lines);\n\tfclose(fscore);free(bufferchar);\n\treturn lines;\n}\n\nint genereScore(int nbCoups, int nbCartes){\n\treturn (int)((0.1+1.0/(double)(nbCoups))*(nbCartes)*100);\n}",
			"file": "projet/score.c",
			"file_size": 3425,
			"file_write_time": 132045587362091086,
			"settings":
			{
				"buffer_size": 3425,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "projet/header.h",
			"settings":
			{
				"buffer_size": 235,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/display.h",
			"settings":
			{
				"buffer_size": 5068,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "projet/callbacks.h",
			"settings":
			{
				"buffer_size": 1685,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/couleur.h",
			"settings":
			{
				"buffer_size": 332,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n\tModule de la gestion des scores\n\tChaque fonction qui doit acceder au fichier ouvre puis ferme ce dernier.\n\tCela assure que l'utilisation du fichier est transparente pour le reste du programme,\n\tmais on se retrouve avec des ouvertures multiples de fichier.\n\tUtiliser ces fonctions avec precaution pour ne pas ouvrir le fichier un tres grand nombre de fois\n*/\n\n#pragma once\n\n/****************************/\n//\t\t inclusions \t\t//\n/****************************/\n#include <errno.h>\n#include <stdio.h>\n#include \"player.h\"\n\n/****************************/\n//\t\t  macros\t\t\t//\n/****************************/\n#define FILE_NAME \"./.score\" //nom du fichier score\n#define MAX_SCORE 10\t\t //nombre de scores total dans le fichier\n\n/****************************/\n//\t\t  fonctions\t\t\t//\n/****************************/\n/*\n\tCree le fichier score si il n'existe pas deja.\n\tPermet de faire fonctionner le jeu si le fichier est supprime par erreur\n*/\nextern void createFile();\n\n/*\n\tajoute un score (nom+score) dans le fichier.\n\tle score est insere de facon a ce que le fichier soit trie dans l'ordre decroissant des scores\n\tCette procedure cree un fichier temporaire qui va etre renomme pour ecraser le fichier score\n\t@args: \n\t\t- Player (de la structure definie dans player.h) a ajouter au fichier\n*/\nextern void addScore(Player);\n\n/*\n\tAjoute un joueur dans la liste de tout les joueurs contenus dans le fichier,\n\tpuis trie les joueurs dans l'ordre decroissant des scores\n\t@args:\n\t\t- Pointeur sur Player le joueur a ajouter a la liste\n\t\t- Pointeur sur Liste la liste contenant tout les joueurs du fichier score\n*/\nextern void insertAndSort(Player *, Liste *);\n\n/*\n\tRecupere la liste de tout les joueurs dans le fichier score\n\t@args:\n\t\t- Pointeur sur Liste qui va contenir tout les joueurs\n*/\nextern void getScore(Liste *);\n\n/*\n\tDonne le dernier score enregistre dans le fichier.\n\tSi le fichier est vide, NULL est retourne\n\t@return:\n\t\t- int le dernier score du fichier\n*/\nextern int getLastScore();\n\n/*\n\tDonne le nombre de scores dans le fichier\n\t@return:\n\t\t- int le nombre de scores dans le fichier (0 si aucun score)\n*/\nextern int nbScores();\n\n/*\n\tGenere le score du joueur selon cette formule:\n\t\t(1/10+1/nbCoups)*nbCartes*100\n\t\tavec nbCoups le nombre de coups joues dans la partie et nbCartes le nombre de cartes dans la partie\n*/\nextern int genereScore (int, int);",
			"file": "/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/score.h",
			"file_size": 2343,
			"file_write_time": 132045586018100298,
			"settings":
			{
				"buffer_size": 2343,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "projet/player.h",
			"settings":
			{
				"buffer_size": 1746,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/forme.h",
			"settings":
			{
				"buffer_size": 2156,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "projet/jeu.h",
			"settings":
			{
				"buffer_size": 3487,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "projet/liste.h",
			"settings":
			{
				"buffer_size": 1789,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "projet/carte.h",
			"settings":
			{
				"buffer_size": 941,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				"Clean"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"push",
				"Git: Push"
			],
			[
				"comm",
				"Git: Quick Commit (repo, only already added files)"
			],
			[
				"pull",
				"Git: Pull"
			],
			[
				"git ",
				"Git: Stash Apply"
			],
			[
				"pu",
				"Git: Pull"
			],
			[
				"git",
				"Preferences: GitGutter Settings"
			],
			[
				"commi",
				"Git: Quick Commit (current file)"
			],
			[
				"func",
				"Snippet: function_1arg"
			],
			[
				"deviot",
				"Deviot: Ouvrir le dossier de compilation"
			],
			[
				"fun",
				"Snippet: function_1arg"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Quick Commit (repo)"
			],
			[
				"gdb",
				"SublimeGDB: Open Console View"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"eas",
				"EasyClangComplete: Show popup info"
			],
			[
				"easy",
				"EasyClangComplete: Clean current CMake cache"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Upgrade Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"",
				"A File Icon: Settings"
			],
			[
				"pack",
				"Package Control: Enable Package"
			],
			[
				"pac",
				"Package Control: Remove Package"
			],
			[
				"pan",
				"Pandoc"
			],
			[
				"Pa",
				"Package Control: Install Package"
			],
			[
				"terminus",
				"Preferences: Terminus Key Bindings"
			],
			[
				"termi",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"github",
				"GitHub: Update Gist"
			],
			[
				"gi",
				"GitHub: Open Gist in Editor"
			],
			[
				"pa",
				"Package Control: Remove Package"
			],
			[
				"ter",
				"Terminal View: Open Bash Terminal"
			],
			[
				"pa in",
				"Package Control: Install Package"
			],
			[
				"P",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 150.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/home/romain/Documents/C/projet/.score",
		"/home/romain/Documents/C/projet/player.c",
		"/home/romain/Documents/C/projet/forme.c",
		"/home/romain/Documents/C/projet/jeu.c",
		"/home/romain/Documents/C/projet/liste.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/score.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/couleur.c",
		"/home/romain/Documents/C/projet/display.c",
		"/home/romain/Documents/C/projet/main.c",
		"/home/romain/Documents/C/projet/file.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/file.h",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/file.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/display.c",
		"/home/romain/Documents/C/projet/score.txt",
		"/home/romain/Documents/C/projet/carte.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/forme.c",
		"/home/romain/Documents/C/projet/makefile",
		"/home/romain/Documents/C/projet/affichage.h",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/image.c",
		"/home/romain/Documents/C/projet/affichage.c",
		"/home/romain/Documents/C/projet/menu.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/menu.h",
		"/home/romain/Documents/C/projet/shuffle.h",
		"/home/romain/Documents/C/projet/shuffle.c",
		"/home/romain/Documents/C/exec.sh",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/image.h",
		"/home/romain/Documents/C/compile_and_exec.sh",
		"/home/romain/Documents/C/projet/matrice.h",
		"/home/romain/Documents/C/projet/matrice.c",
		"/home/romain/Documents/C/projet/liste.h",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/shuffle.h",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/shuffle.c",
		"/home/romain/Documents/C/crypt/decrypt.c",
		"/home/romain/Documents/C/td14/exo2.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/.gitignore",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/callback.h",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/callback.c",
		"/usr/share/doc/libsx-dev/examples/demo0/main0.c",
		"/usr/share/doc/libsx-dev/examples/demo0/Makefile",
		"/usr/share/doc/libsx-dev/examples/demo0/Makefile.no_auto",
		"/usr/share/doc/libsx-dev/examples/demo0/callbacks.c.gz",
		"/usr/share/doc/libsx-dev/examples/demo0/callbacks.h",
		"/usr/share/doc/libsx-dev/examples/demo0/foo0.c",
		"/usr/share/doc/libsx-dev/examples/demo0/foo.h",
		"/usr/share/doc/libsx-dev/examples/demo0/hello_world.c",
		"/usr/share/doc/libsx-dev/examples/demo0/main.c.gz",
		"/usr/share/doc/libsx-dev/examples/demo0/main.h",
		"/usr/share/doc/libsx-dev/examples/demo0/test.c",
		"/usr/share/doc/libsx-dev/examples/draw_demo/draw_demo.c",
		"/home/romain/Documents/C/crypt/programme.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/display_img.c",
		"/home/romain/Documents/C/crypt/makefile",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/grille.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/grille.h",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/test.h",
		"/home/romain/Documents/C/projet/test.c",
		"/etc/mysql/my.cnf",
		"/home/romain/page.php",
		"/home/romain/img.html",
		"/home/romain/page.html",
		"/home/romain/Documents/C/projet/file.h",
		"/home/romain/Documents/C/td15/data.h",
		"/home/romain/Documents/C/td15/callbacks.h",
		"/home/romain/Documents/C/td15/data.c",
		"/home/romain/Documents/C/td15/conv.c",
		"/home/romain/Documents/C/td15/callbacks.c",
		"/home/romain/Documents/C/td15/makefile",
		"/home/romain/Documents/C/td15/exo1.c",
		"/home/romain/Documents/C/projet/carte.h",
		"/home/romain/Documents/C/projet/header.h",
		"/home/romain/Documents/C/projet/test_file.c",
		"/home/romain/Documents/C/projet/toutDoux.txt",
		"/home/romain/Documents/C/td2/ex2_6.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/td15/exo1.c",
		"/home/romain/Documents/C/crypt/code_img.c",
		"/home/romain/Documents/C/crypt/code_img.h",
		"/home/romain/Documents/C/crypt/config.txt",
		"/home/romain/Documents/C/td14/ex_ds.c",
		"/home/romain/Documents/C/td10/exo1.c",
		"/home/romain/Documents/C/crypt/config",
		"/home/romain/Documents/C/crypt/header.h",
		"/home/romain/Documents/C/crypt/fcrypter.c",
		"/home/romain/Documents/C/crypt/Crypter.c",
		"/home/romain/Documents/C/crypt/Decrypter.c",
		"/home/romain/Documents/C/crypt/Cryptage/main.c",
		"/home/romain/Documents/C/crypt/Decryptage/main.c",
		"/home/romain/Documents/C/crypt/show_picture.c",
		"/home/romain/Documents/C/crypt/hide_picture.c",
		"/home/romain/Documents/C/crypt/imglena/lena",
		"/home/romain/Documents/C/td14/exo1.c",
		"/home/romain/Documents/C/td14/show_picture.c",
		"/home/romain/Documents/C/td14/hide_picture.c",
		"/home/romain/Documents/C/td14/imglena/lena.txt",
		"/home/romain/Documents/C/td13/pile.c",
		"/home/romain/Documents/C/td13/cal.c",
		"/home/romain/Documents/C/td13/liste.c",
		"/home/romain/Documents/C/td13/pile.h",
		"/home/romain/Documents/C/td13/liste.h",
		"/home/romain/Documents/C/td14/fichier.txt",
		"/home/romain/Documents/C/td14/newfichier.txt",
		"/home/romain/Documents/C/td13/makefile",
		"/home/romain/Documents/C/td13/test.c",
		"/home/romain/Documents/C/td12/exo3.c",
		"/media/romain/OS/Users/roco2/Desktop/Elec3/C/td14/exo1.c",
		"/home/romain/Documents/C/td12/exo2.c",
		"/home/romain/Documents/C/td12/exo1.c",
		"/home/romain/Documents/C/td13/exo1.c",
		"/home/romain/Documents/C/td11/exo4.c",
		"/home/romain/Documents/C/td12/td12.pdf",
		"/home/romain/.config/sublime-text-3/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/home/romain/Documents/C/td11/exo1.c",
		"/home/romain/Documents/C/td11/exo2.c",
		"/home/romain/Documents/C/td11/exo3.c",
		"/home/romain/Documents/C/td11/exo5.c",
		"/home/romain/Documents/C/compile.sh",
		"/home/romain/Documents/C/cour_C.sublime-project",
		"/home/romain/Documents/C/td8/exo5.c",
		"/home/romain/Documents/C/td9/exo2.c",
		"/home/romain/Documents/C/td10/exo3.c",
		"/home/romain/Documents/C/td10/exo2.c",
		"/home/romain/Documents/C/td9/exo1.c",
		"/home/romain/Documents/C/td9/exo3.c",
		"/home/romain/Documents/C/td9/exo1.s",
		"/home/romain/Documents/C/td9/exo1.o",
		"/home/romain/Documents/C/td9/a.out",
		"/home/romain/Documents/C/td3/ex4.c",
		"/home/romain/Documents/C/td9/exo1.i",
		"/home/romain/Documents/C/td8/exo1.c"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"extern",
			"playercpy",
			"extern",
			";",
			"pointeur",
			";",
			"Liste a",
			"Liste",
			"Piste",
			"updateDiffBox",
			"*d",
			"data",
			"ftemp",
			"TOP_LEVEL_FORM",
			"MakeToggleWidget",
			"setSize",
			"MakeButton",
			"w2",
			"pos2",
			"w1",
			"getScore",
			"screen->game->",
			"CloseWindow",
			"newWindow",
			"w2",
			"pos2",
			"w2",
			"pos2",
			"w1",
			"form_infobox",
			"w2",
			"pos2",
			"w1",
			"initDiffBox",
			"NULL",
			"NO_CARE",
			"w2",
			"pos2",
			"fenetreDeFin",
			"NULL",
			"1",
			"fwrite",
			"fscore",
			"printScores",
			"w",
			"W",
			"w",
			"hide",
			"updateInfoBox",
			"initDiffBox",
			"NULL",
			"NO_CARE",
			"pairesRestantesLabel",
			"          \\",
			"start_str",
			"rules_str",
			"form_under_panel",
			"menu",
			"Menu",
			"return_button",
			"replay",
			"to_bad",
			"retournerCarte",
			"window",
			"WINDOW",
			"Window",
			"window",
			"Window",
			"WINDOW",
			"Window",
			"window",
			"return_button",
			"\treturn_button=MakeButton(\"return\", replay,NULL);\n    quit_button=MakeButton(\"quit\",quit,NULL);\n    SetWidgetPos(quit_button,PLACE_UNDER,return_button,NO_CARE,NULL);",
			"ld",
			"screen->fact",
			"screen->color",
			"screen->color[2]",
			"struct t",
			"couleurBg",
			"int",
			"grilleWidth",
			"grilleHeight",
			"grilleWidth",
			"GRILLEWIDTH",
			"right",
			"window",
			"Window",
			"WINDOW",
			"Window",
			"window",
			"fenetreDeFin",
			"menu",
			"init_display",
			"init",
			"board",
			"initAffichage",
			"widget2",
			"widget1",
			"widget",
			"Widget",
			"widget1",
			"//\n",
			"/**/",
			"/",
			"pointe",
			"cote",
			"rad",
			"void",
			"genereforme",
			"NB_FORMES",
			"void",
			"saveScore",
			"}\n",
			")->f",
			"->f",
			"((Card *)data)->f",
			"->f",
			"quit",
			"quiter",
			"widget1",
			"grilleWidth",
			"GRILLEWIDTH",
			"Color",
			"color",
			"joueur",
			"free",
			"*joue",
			"label_rules"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "projet/callbacks.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4773,
						"regions":
						{
						},
						"selection":
						[
							[
								4773,
								4773
							]
						],
						"settings":
						{
							"SL.15.region_keys":
							[
							],
							"SL.16.region_keys":
							[
							],
							"SL.17.region_keys":
							[
							],
							"SL.18.region_keys":
							[
							],
							"SL.67.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 2229.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "projet/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 907,
						"regions":
						{
						},
						"selection":
						[
							[
								612,
								612
							]
						],
						"settings":
						{
							"SL.40.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "projet/score.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3425,
						"regions":
						{
						},
						"selection":
						[
							[
								796,
								796
							]
						],
						"settings":
						{
							"SL.41.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 42.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "projet/header.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 235,
						"regions":
						{
						},
						"selection":
						[
							[
								33,
								33
							]
						],
						"settings":
						{
							"SL.31.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/display.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5068,
						"regions":
						{
						},
						"selection":
						[
							[
								178,
								178
							]
						],
						"settings":
						{
							"SL.20.region_keys":
							[
							],
							"SL.21.region_keys":
							[
							],
							"SL.26.region_keys":
							[
							],
							"SL.31.region_keys":
							[
							],
							"SL.42.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "projet/callbacks.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1685,
						"regions":
						{
						},
						"selection":
						[
							[
								159,
								159
							]
						],
						"settings":
						{
							"SL.24.region_keys":
							[
							],
							"SL.28.region_keys":
							[
							],
							"SL.69.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 137.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/couleur.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 332,
						"regions":
						{
						},
						"selection":
						[
							[
								71,
								71
							]
						],
						"settings":
						{
							"SL.35.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/score.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2343,
						"regions":
						{
						},
						"selection":
						[
							[
								1455,
								1455
							]
						],
						"settings":
						{
							"SL.24.region_keys":
							[
							],
							"SL.45.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 179.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "projet/player.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1746,
						"regions":
						{
						},
						"selection":
						[
							[
								478,
								478
							]
						],
						"settings":
						{
							"SL.25.region_keys":
							[
							],
							"SL.34.region_keys":
							[
							],
							"SL.37.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 65.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/media/romain/OS/Users/roco2/Desktop/Elec3/C/projet/forme.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2156,
						"regions":
						{
						},
						"selection":
						[
							[
								446,
								446
							]
						],
						"settings":
						{
							"SL.26.region_keys":
							[
							],
							"SL.27.region_keys":
							[
							],
							"SL.80.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 643.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "projet/jeu.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3487,
						"regions":
						{
						},
						"selection":
						[
							[
								2304,
								2304
							]
						],
						"settings":
						{
							"SL.29.region_keys":
							[
							],
							"SL.34.region_keys":
							[
							],
							"SL.36.region_keys":
							[
							],
							"SL.66.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "projet/liste.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1789,
						"regions":
						{
						},
						"selection":
						[
							[
								1530,
								1530
							]
						],
						"settings":
						{
							"SL.27.region_keys":
							[
							],
							"SL.28.region_keys":
							[
							],
							"SL.33.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 932.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "projet/carte.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 941,
						"regions":
						{
						},
						"selection":
						[
							[
								175,
								175
							]
						],
						"settings":
						{
							"SL.26.region_keys":
							[
							],
							"SL.29.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 66.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.468466940521,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 120.0
	},
	"output.Terminus":
	{
		"height": 175.0
	},
	"output.Terminus 2":
	{
		"height": 150.0
	},
	"output.Terminus 3":
	{
		"height": 150.0
	},
	"output.Terminus 4":
	{
		"height": 150.0
	},
	"output.deviot":
	{
		"height": 138.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 138.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 120.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "cour_C.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Bureau/Elec3/projet_trans/part2/code_c/arm_c.sublime-project"
			],
			[
				"c",
				"~/Documents/C/cour_C.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 354.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 515.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 50.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
